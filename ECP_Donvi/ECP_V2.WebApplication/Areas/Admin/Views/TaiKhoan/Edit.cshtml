@using ECP_V2.Common.Helpers
@model ECP_V2.WebApplication.Models.NhanVienModel

@{
    ViewBag.Title = "Cập nhật tài khoản";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}

<script type="text/javascript">
   
    $(function () {
        //$('#drlPhongBan').attr('disabled', 'true');
        $("#drlDonViId").change(function () {
            var selectDvi = $('#drlDonViId').val();
            var urlGetPban = "/Admin/TaiKhoan/ListPBanByIdDvi?id=" + selectDvi;
            //pageSize = valueSelected;
            $.ajax({
                url: urlGetPban,
                type: 'get',
                dataType: 'html',
                async: false,
                success: function (data) {
                    $('#drlPhongBan').removeAttr('disabled');
                    $("#divPhongBan").html(data);
                },
                error: function () {
                    new PNotify({
                        title: 'Thông báo!',
                        text: 'Không lấy được dữ liệu!',
                        type: 'error'
                    });
                }
            });
        });
    });

    function btnSubmitEdit_OnClick() {

        if ($("#UserName").val() == '') {
            new PNotify({
                title: 'Thông báo!',
                text: '[Tài khoản đăng nhập] không được để trống !',
                type: 'error'
            });
            return;
        }

        if ($("#FirstName").val() == '') {
            new PNotify({
                title: 'Thông báo!',
                text: '[Họ] không được để trống !',
                type: 'error'
            });
            return;
        }

        if ($("#LastName").val() == '') {
            new PNotify({
                title: 'Thông báo!',
                text: '[Tên] không được để trống !',
                type: 'error'
            });
            return;
        }

        $("#frmEditUser").submit();

        //var pwd = String($("#Password").val());

        ////Ít nhất một chữ cái viết hoa tiếng Anh
        //var regex1 = /[A-Z]/
        ////Ít nhất một chữ cái tiếng Anh viết thường
        //var regex2 = /[a-z]/
        ////Ít nhất một chữ số
        //var regex3 = /[0-9]/
        ////Chiều dài tối thiểu tám
        //var regex4 = /^.{8,}$/
        ////Ít nhất một nhân vật đặc biệt
        //var regex5 = /[\@@\#\$\%\^\&\*\(\)\_\+\!]/

        //if (regex4.test(pwd)) {
        //    if (regex1.test(pwd)) {
        //        if (regex2.test(pwd)) {
        //            if (regex5.test(pwd)) {
        //                $("#frmEditUser").submit();
        //            }
        //            else {
        //                new PNotify({
        //                    title: 'Thông báo!',
        //                    text: 'Mật khẩu phải có chứa ký tự đặc biệt!',
        //                    type: 'error'
        //                });
        //            }
        //        }
        //        else {
        //            new PNotify({
        //                title: 'Thông báo!',
        //                text: 'Mật khẩu phải có chứa ký tự viết thường!',
        //                type: 'error'
        //            });
        //        }
        //    }
        //    else {
        //        new PNotify({
        //            title: 'Thông báo!',
        //            text: 'Mật khẩu phải có chứa ký tự viết hoa!',
        //            type: 'error'
        //        });
        //    }
        //}
        //else {
        //    new PNotify({
        //        title: 'Thông báo!',
        //        text: 'Mật khẩu ít nhất phải có 8 ký tự!',
        //        type: 'error'
        //    });
        //}

    }

</script>

@using (Html.BeginForm("Edit", "TaiKhoan", FormMethod.Post, new { @id = "frmEditUser", enctype = "multipart/form-data", @class = "form-horizontal form-bordered" }))
{
    <div class="col-sm-12">
        <section class="panel-heading">
            <div class="warning-area">
                @Html.HiddenFor(model => model.Id)
                @Html.ValidationSummary(true)
            </div>
            <p>
                @if (TempData["Notification"] != null)
                {
                    @Html.Hidden("NotificationAutoHide", TempData["NotificationAutoHide"])
                    <div id="NotificationBox" class="@TempData["NotificationCSS"]">
                        @TempData["Notification"]
                    </div>
                }
            </p>
        </section>
        <div style="margin-left:15px;">
            <h1>
                <a class="mb-xs mt-xs mr-xs btn btn-primary" href="@Url.Action("Index", "TaiKhoan")">
                    <i class="fa fa-list"></i> &nbsp; Danh sách tài khoản
                </a>
            </h1>
        </div>

        <div class="col-sm-6">
            <section class="panel">
                <header class="panel-heading">
                    <h2 class="panel-title">Thông tin tài khoản</h2>
                </header>
                <div class="panel-body">
                    <div class="form-group">
                        <label class="col-sm-4 control-label">Đơn vị quản lý:</label>
                        <div class="col-sm-8">
                            @Html.DropDownList("DonViId", (IEnumerable<SelectListItem>)ViewBag.ListDvi, "Chọn đơn vị ...", new { @class = "form-control", id = "drlDonViId" })
                            @Html.ValidationMessageFor(m => m.DonViId)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">Phòng ban:</label>
                        <div class="col-sm-8" id="divPhongBan">
                            @Html.DropDownList("PhongBanId", (IEnumerable<SelectListItem>)ViewBag.ListPban, "Chọn phòng ban/đội ...", new { @class = "form-control", id = "drlPhongBan" })
                            @Html.ValidationMessageFor(m => m.PhongBanId)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">Tên người dùng:</label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.TenNhanVien, new { @class = "form-control", id = "txtName" })
                            @*@Html.ValidationMessageFor(m => m.TenNhanVien)*@
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Số điện thoại
                        </label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.SoDT, new { @class = "form-control", id = "txtSDT" })
                            @Html.ValidationMessageFor(m => m.SoDT)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Chức vụ
                        </label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.ChucVu, new { @class = "form-control", id = "txtChucVu" })
                            @Html.ValidationMessageFor(m => m.ChucVu)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Bậc an toàn
                        </label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.BacAnToan, new { @class = "form-control", id = "txtBacAnToan" })
                            @Html.ValidationMessageFor(m => m.BacAnToan)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Hòm thư
                        </label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", id = "txtEmail" })
                            @Html.ValidationMessageFor(m => m.Email)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Địa chỉ
                        </label>
                        <div class="col-sm-8">
                            @Html.TextAreaFor(x => x.DiaChi, new { @class = "form-control", id = "txtDiaChi", rows = "3" })
                            @Html.ValidationMessageFor(m => m.DiaChi)
                        </div>
                    </div>
                </div>
            </section>
        </div>
        <div class="col-sm-6">
            <section class="panel">
                <header class="panel-heading">
                    <h2 class="panel-title">Thông tin đăng nhập</h2>
                </header>
                <div class="panel-body">
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Chọn quyền
                        </label>
                        <div class="col-md-8">
                            @*@Html.DropDownListFor(x => x.RoleId, Model.ListRole, new { @class = "form-control", id = "drlRoleFor" })*@
                            @*@Html.DropDownList("RoleId", (IEnumerable<SelectListItem>)ViewBag.Roles, new { @class = "form-control" })*@

                            @if (ViewBag.ListRole != null)
                            {
                                var listRole = (List<ECP_V2.WebApplication.Models.ApplicationRole>)ViewBag.ListRole;

                                <select class="form-control mb-md" name="RoleId" id="RoleId">
                                    @foreach (var group in listRole.GroupBy(x => x.TypeOfRole))
                                    {
                                        var first = group.FirstOrDefault();

                                        if (first.TypeOfRole == 1)
                                        {
                                            <optgroup label="Quyền hệ thống">

                                                @foreach (var item in group)
                                                {
                                                    string selected = (item.Name == Model.RoleId) ? "selected" : "";
                                                    <option value="@item.Id" @selected>@item.Name - @item.Description</option>
                                                }

                                            </optgroup>
                                        }
                                        else
                                        {
                                            <optgroup label="Quyền chức năng">

                                                @foreach (var item in group)
                                                {
                                                    string selected = (item.Name == Model.RoleId) ? "selected" : "";
                                                    <option value="@item.Id" @selected>@item.Name - @item.Description</option>
                                                }

                                            </optgroup>
                                        }
                                    }

                                </select>
                            }

                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Tên đăng nhập
                        </label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", id = "txtTenDangNhap", @readonly = "readonly" })
                            @*@Html.ValidationMessageFor(m => m.UserName)*@
                        </div>
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                        </div>
                    </div>*@
                    <div class="form-actions col-sm-offset-2 col-sm-10">
                        <button onclick="btnSubmitEdit_OnClick()" class="btn btn-primary" type="button">Đồng ý</button>
                        <a class="btn btn-default" href="@Url.Action("Index","TaiKhoan")">
                            <span>Hủy bỏ</span>
                        </a>
                    </div>
                </div>
            </section>
        </div>
    </div>
}