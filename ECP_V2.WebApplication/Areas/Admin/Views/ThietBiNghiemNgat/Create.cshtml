@model ECP_V2.WebApplication.Areas.Admin.Models.ThietBiNghiemNgatViewModels
@{
    Layout = null;
}

<link href="/Content/AdminPanel/assets/vendor/jquery-ui/css/jquery-ui-default.css" rel="stylesheet" />
<style>
    select {
        height: 40px;
        padding: 0;
    }

    #divUpLoad .fileUpload {
        position: relative;
        overflow: hidden;
    }

        #divUpLoad .fileUpload input.upload {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            padding: 0;
            font-size: 20px;
            cursor: pointer;
            opacity: 0;
            background-color: #fff;
            filter: alpha(opacity=0);
        }

    #divUpLoad .filenameupload {
        width: 98%;
    }

    #divUpLoad #upload_prev {
        padding: 5px;
    }

        #divUpLoad #upload_prev span {
            display: flex;
            padding: 0 5px;
            font-size: 13px;
            margin: 5px;
        }

            #divUpLoad #upload_prev span:hover {
                background-color: #e6f7ff;
            }

    #divUpLoad p.close {
        cursor: pointer;
        font-size: 15px;
    }
</style>
<div style="padding:10px">
    @using (Html.BeginForm("Create", "ThietBiNghiemNgat", FormMethod.Post, new { id = "frmCreate", @role = "form", @class = "form-horizontal mt-6", enctype = "multipart/form-data" }))
    {
        <div class="row" style="text-align:center;">
            <div class="form-group">
                <label class="control-label col-md-6" style="text-align:right;font-weight:bold">CÓ THÔNG TIN KIỂM ĐỊNH</label>
                <div class="col-md-6" style="text-align:left">
                    <div class="switch switch-sm switch-warning">
                        <input type="checkbox" id="switchTTKD" name="switchTTKD" onchange="switchTTKD_onchange()" value="true" data-plugin-ios-switch checked />
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <label class="control-label" for="MaHSX">Nhóm thiết bị</label>
                <div class="clearfix"></div>
                @if (ViewBag.NhomThietBi != null)
                {
                    @Html.DropDownListFor(model => model.MaNhom, (SelectList)ViewBag.NhomThietBi, new { @class = "form-control", @style = "width:100%", @onchange = "NhomThietBi_OnChange(this)" })
                }
                else
                {
                    <select id="MaNhom" name="MaNhom" style="width:100%" onclick="NhomThietBi_OnChange(this)" class="form-control">
                        <option value="">Chọn nhóm thiết bị</option>
                    </select>
                }
                @Html.ValidationMessageFor(model => model.MaNhom)
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <label class="control-label" for="MaHSX">Tên thiết bị</label>
                <div class="clearfix"></div>
                @if (ViewBag.LoaiThietBi != null)
                {
                    @Html.DropDownListFor(model => model.MaLoai, (SelectList)ViewBag.LoaiThietBi, "Chọn tên thiết bị", new { @class = "form-control", @style = "width:100%", @onchange = "LoaiThietBi_OnChange(this)" })
                }
                else
                {
                    <select id="MaLoai" name="MaLoai" style="width:100%" onclick="LoaiThietBi_OnChange(this)" class="form-control">
                        <option value="">Chọn tên thiết bị</option>
                    </select>
                }
                @Html.ValidationMessageFor(model => model.MaLoai)
            </div>
            @*<div class="col-md-4">
                    <label class="control-label" for="TenThietBi">Tên TBNN</label>
                    @Html.TextBoxFor(model => model.TenThietBi, new { @class = "form-control", @placeholder = "Nhập tên công cụ dụng cụ an toàn ..." })
                    @Html.ValidationMessageFor(model => model.TenThietBi)
                </div>*@
            <div class="col-md-4">
                <label class="control-label" for="MaHieu">Nhãn hiệu</label>
                @Html.TextBoxFor(model => model.MaHieu, new { @class = "form-control", @placeholder = "Nhập nhãn hiệu ..." })
                @Html.ValidationMessageFor(model => model.MaHieu)
            </div>
            <div class="col-md-4">
                <label class="control-label" for="NgayDuaVaoSuDung">Ngày đưa vào sử dụng</label>
                <div class="clearfix"></div>
                @Html.TextBoxFor(model => model.NgayDuaVaoSuDung, new { style = "width:100%" })
                @Html.ValidationMessageFor(model => model.NgayDuaVaoSuDung)
            </div>
        </div>
        <div class="row" style="margin-top:10px">
            <div class="col-md-4">
                <label class="control-label" for="MaHSX">Hãng sản xuất</label>
                <div class="clearfix"></div>
                @Html.TextBoxFor(model => model.HangSanXuat, new { @class = "form-control", @placeholder = "Nhập hãng sản xuất ..." })
                @Html.ValidationMessageFor(model => model.HangSanXuat)
            </div>
            <div class="col-md-4">
                <label class="control-label" for="MaNSX">Nước sản xuất</label>
                <div class="clearfix"></div>
                @Html.TextBoxFor(model => model.NuocSanXuat, new { @class = "form-control", @placeholder = "Nhập nước sản xuất ..." })
                @Html.ValidationMessageFor(model => model.NuocSanXuat)
            </div>
            <div class="col-md-4">
                <label class="control-label" for="NamSX">Năm chế tạo</label>
                <div class="clearfix"></div>
                <div data-plugin-spinner data-plugin-options='{ "value":@DateTime.Now.Year, "min": 1900, "max": 2099 }'>
                    <div class="input-group input-small" style="width:100%">
                        @Html.TextBoxFor(model => model.NamSX, new { @class = "spinner-input form-control", @onClick = "this.select();", @style = "width:92%" })
                        <div class="spinner-buttons input-group-btn btn-group-vertical" style="float:left;width:8%">
                            <button type="button" class="btn spinner-up btn-xs btn-default">
                                <i class="fa fa-angle-up"></i>
                            </button>
                            <button type="button" class="btn spinner-down btn-xs btn-default">
                                <i class="fa fa-angle-down"></i>
                            </button>
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.NamSX)
            </div>

        </div>
        <div class="row" style="margin-top:10px;margin-bottom:10px">
            <div class="col-md-4">
                <label class="control-label" for="inputDefault">Đơn vị quản lý</label>
                <select class="form-control" id="DonViQuanLyId" name="DonViQuanLyId">
                    @try
                    {
                        @Html.Raw(ECP_V2.Business.Repository.DonViRepository.GetAllDonViHtml2(Session["DonViID"].ToString()))
                    }
                    catch { }
                </select>
            </div>
            <div class="col-md-4">
                <label class="control-label" for="inputDefault">Tập thể/ cá nhân quản lý</label>
                <select class="form-control" id="PhongBanID" name="PhongBanID">
                    <option value="">Chọn tập thể/ cá nhân quản lý</option>
                    @try
                    {
                        @Html.Raw(ECP_V2.Business.Repository.PhongBanRepository.GetPhongBanByDonViIDHtml(Session["DonViID"].ToString(), 0))
                    }
                    catch { }
                </select>
            </div>
            <div class="col-md-3">
                <label class="control-label" for="MaTT">Trạng thái</label>
                <div class="clearfix"></div>
                @if (ViewBag.TrangThaiCCDC != null)
                {
                    @Html.DropDownListFor(model => model.MaTT, (SelectList)ViewBag.TrangThaiCCDC, new { @class = "selectoption", @style = "width:138%" })
                }
                else
                {
                    <select id="MaTT" name="MaTT" class="selectoption">
                        <option value="">Chọn trạng thái</option>
                    </select>
                }
                @Html.ValidationMessageFor(model => model.MaTT)
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <label class="control-label">Số chế tạo</label>
                @Html.TextBoxFor(model => model.SoCheTao, new { @class = "form-control", @placeholder = "Nhập Số chế tạo ...", @style = "width:100%" })
                @Html.ValidationMessageFor(model => model.SoCheTao)
            </div>
            <div class="col-md-4">
                <label class="control-label">Số đăng ký</label>
                @Html.TextBoxFor(model => model.SoDangKy, new { @class = "form-control", @placeholder = "Nhập Số đăng ký ...", @style = "width:100%" })
                @Html.ValidationMessageFor(model => model.SoDangKy)
            </div>
            <div class="col-md-4">
                <label id="lblTTTK" class="control-label">Tải trọng thiết kế (Tấn)</label>
                @Html.TextBoxFor(model => model.TaiTrongThietKe, new { @class = "form-control", @placeholder = "Nhập Tải  trọng thiết kế ...", @type = "number", @style = "width:100%" })
                @Html.ValidationMessageFor(model => model.TaiTrongThietKe)
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <label id="lblTTCP" class="control-label">Tải trọng cho phép (Tấn)</label>
                @Html.TextBoxFor(model => model.TaiTrongChoPhep, new { @class = "form-control", @placeholder = "Nhập Tải trọng cho phép ...", @type = "number", @style = "width:100%" })
                @Html.ValidationMessageFor(model => model.TaiTrongChoPhep)
            </div>
            <div class="col-md-4">
                <label class="control-label" for="HanKiemDinh">Hạn kiểm định</label>
                <div class="clearfix"></div>
                <div class="col-md-9" style="padding:0">
                    <div data-plugin-spinner data-plugin-options='{ "value":12, "min": 0, "max": 9999 }'>
                        <div class="input-group input-small">
                            @Html.TextBoxFor(model => model.HanKiemDinh, new { @class = "spinner-input form-control", @onClick = "this.select();", @style = "width:80%" })
                            <div class="spinner-buttons input-group-btn btn-group-vertical" style="float:left;width:22px">
                                <button type="button" class="btn spinner-up btn-xs btn-default">
                                    <i class="fa fa-angle-up"></i>
                                </button>
                                <button type="button" class="btn spinner-down btn-xs btn-default">
                                    <i class="fa fa-angle-down"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.HanKiemDinh)
                </div>
                <label class="col-md-2 control-label" style="padding-right:0;margin-right:0" for="inputDefault">Tháng</label>
            </div>
        </div>

        <div id="divThongTinKiemDinh">

            <label class="control-label" style="font-weight:bold">THÔNG TIN KIỂM ĐỊNH</label>
            <hr style="margin:0;padding:0" />

            <div class="row">
                <div class="col-md-4">
                    <label class="control-label" for="LanKiemTra">Lần kiểm định</label>
                    <div class="clearfix"></div>
                    <div data-plugin-spinner data-plugin-options='{ "value":1, "min": 1, "max": 9999 }'>
                        <div class="input-group input-small" style="width:100%">
                            @Html.TextBoxFor(model => model.LanKiemTra, new { @class = "spinner-input form-control", @onClick = "this.select();", @style = "width:92%" })
                            <div class="spinner-buttons input-group-btn btn-group-vertical" style="float:left;width:8%">
                                <button type="button" class="btn spinner-up btn-xs btn-default">
                                    <i class="fa fa-angle-up"></i>
                                </button>
                                <button type="button" class="btn spinner-down btn-xs btn-default">
                                    <i class="fa fa-angle-down"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.LanKiemTra)
                </div>
                <div class="col-md-4">
                    <label class="control-label" for="NgayKiemTra">Ngày kiểm định</label>
                    <div class="clearfix"></div>
                    @Html.TextBoxFor(model => model.NgayKiemTra, new { @style = "width:100%" })
                    @Html.ValidationMessageFor(model => model.NgayKiemTra)

                </div>
                <div class="col-md-4">
                    <label class="control-label" for="BienBanSo">Biên bản số</label>
                    @Html.TextBoxFor(model => model.BienBanSo, new { @class = "form-control", @placeholder = "Nhập biên bản số ...", })
                    @Html.ValidationMessageFor(model => model.BienBanSo)
                </div>
                @*<div class="col-md-3">
                        <label class="control-label">Kết quả</label>
                        <div class="checkbox-custom">
                            <input type="checkbox" id="KetQua" name="KetQua" onclick="ChangeCheckBox()" value='@(Model.KetQua.GetValueOrDefault() ? "true" : "false")'>
                            <label for="KetQua">Đạt/ Không đạt</label>
                        </div>
                        @Html.ValidationMessageFor(model => model.KetQua)
                    </div>*@

            </div>
            <div class="row">
                <div class="col-md-4">
                    <label class="control-label" for="NguoiKiemTra">Người kiểm tra</label>
                    @Html.TextBoxFor(model => model.NguoiKiemTra, new { @class = "form-control", @placeholder = "Nhập người kiểm tra ..." })
                    @Html.ValidationMessageFor(model => model.NguoiKiemTra)
                </div>
                <div class="col-md-4">
                    <label class="control-label" for="DonViKiemTra">Đơn vị kiểm định</label>
                    @Html.TextBoxFor(model => model.DonViKiemTra, new { @class = "form-control", @placeholder = "Nhập đơn vị kiểm định ..." })
                    @Html.ValidationMessageFor(model => model.DonViKiemTra)
                </div>
                <div class="col-md-4">
                    <label class="control-label" for="KetQua">Kết quả</label>
                    <div class="clearfix"></div>
                    @Html.DropDownListFor(model => model.KetQua, (SelectList)ViewBag.ListKQ, new { @class = "selectoption", @style = "width:100%" })
                    @Html.ValidationMessageFor(model => model.KetQua)
                </div>
            </div>
            <div class="row" style="margin-top:10px">
                <div class="col-md-12">
                    <label class="control-label" for="GhiChu">Ghi chú</label>
                    @Html.TextAreaFor(model => model.GhiChu, new { @class = "form-control", @placeholder = "Nhập ghi chú ..." })
                    @Html.ValidationMessageFor(model => model.GhiChu)
                </div>
            </div>
            <div id="divUpLoad" class="row" style="margin-bottom:5px;padding-left:15px;margin-top:10px">
                <label class="control-label">
                    Ảnh biên bản kiếm định
                </label>
                <div class="fileUpload btn btn-primary btn-sm">
                    <i class="fa fa-upload mr-5"></i>
                    <span>Chọn file</span>
                    <input id="uploadBtn" type="file" class="upload" multiple="multiple" name="browsefile" />
                </div>
                <div id="upload_prev"></div>
            </div>
        </div>
    }
</div>

<script>
    $(function () {

        $("#NgayDuaVaoSuDung").kendoDatePicker({
            format: 'dd/MM/yyyy',
        }).data("kendoDatePicker");

        $("#NgayKiemTra").kendoDatePicker({
            format: 'dd/MM/yyyy',
        }).data("kendoDatePicker");

        $("#MaLoai").select2();
        $("#MaHSX").select2();
        $("#MaNSX").select2();


        // Spinner
        (function ($) {

            'use strict';

            if ($.isFunction($.fn['spinner'])) {

                $(function () {
                    $('[data-plugin-spinner]').each(function () {
                        var $this = $(this),
                            opts = {};

                        var pluginOptions = $this.data('plugin-options');
                        if (pluginOptions)
                            opts = pluginOptions;

                        $this.themePluginSpinner(opts);
                    });
                });

            }

        }).apply(this, [jQuery]);

        // iosSwitcher
        (function ($) {

            'use strict';

            if (typeof Switch !== 'undefined' && $.isFunction(Switch)) {

                $(function () {
                    $('[data-plugin-ios-switch]').each(function () {
                        var $this = $(this);

                        $this.themePluginIOS7Switch();
                    });
                });

            }

        }).apply(this, [jQuery]);

        @if (Model.KetQua.GetValueOrDefault())
        {
            @:$('#KetQua').attr('checked', true);
        }
        else
        {
            @:$('#KetQua').attr('checked', false);
        }

        $(document).on('click', '.close', function () {
            $(this).parents('span').remove();
            var fileInput = $('#uploadBtn')[0].files[$(this).parents('span').attr("id")];
            //clear all selected files from the file input field
            var newFileList = Array.from($('#uploadBtn')[0].files);
            newFileList.splice($(this).parents('span').attr("id"), 1);
        })

        document.getElementById('uploadBtn').onchange = uploadOnChange;

        $("#DonViQuanLyId").change(function () {
            var urlGetPban = "/Admin/ThietBiNghiemNgat/CmbPhongBan?DonViId=" + $('#DonViQuanLyId').val();
            $.ajax({
                url: urlGetPban,
                type: 'get',
                dataType: 'html',
                async: false,
                success: function (data) {
                    $("#PhongBanID").html(data);
                },
                error: function () {
                    new PNotify({
                        title: 'Thông báo!',
                        text: 'Không lấy được dữ liệu!',
                        type: 'error'
                    });
                }
            });
        });

    });

    function uploadOnChange() {
        var files = $('#uploadBtn')[0].files;
        $("#upload_prev").html('');
        for (var i = 0; i < files.length; i++) {
            //$("#upload_prev").append('<span id='+i+'>' + '<div class="filenameupload"><i class="fa fa-paperclip mr-5"></i>' + files[i].name + '</div>' + '<p class="close" ><i class="fa fa-trash"></i></p></span>');
            $("#upload_prev").append('<span id=' + i + '>' + '<div class="filenameupload"><i class="fa fa-paperclip" style="margin-right:5px"></i>' + files[i].name + '</div></span>');
        }

    }

    function ChangeCheckBox() {
        var items = document.getElementById('KetQua');
        if (items.checked)
            items.value = true;
        else
            items.value = false;
    }

    function ChangeCheckBoxMuaTrong() {
        var items = document.getElementById('IsMuaTrong');
        if (items.checked)
            items.value = true;
        else
            items.value = false;
    }

    function switchTTKD_onchange() {
        var items = document.getElementById('switchTTKD');
        if (items.checked) {
            $("#divThongTinKiemDinh").css("display", "inline");
            items.value = true;
        }
        else {
            $("#divThongTinKiemDinh").css("display", "none");
            items.value = false;
        }
    }

    function NhomThietBi_OnChange(el) {
        if (el.value == 1) {
            $("#lblTTTK").text('Tải trọng thiết kế (Tấn)');
            $("#lblTTCP").text('Tải trọng cho phép (Tấn)');
        }
        else if (el.value == 2) {
             $("#lblTTTK").text('Tải trọng thiết kế (PA)');
            $("#lblTTCP").text('Tải trọng cho phép (PA)');
        }
    }

</script>
